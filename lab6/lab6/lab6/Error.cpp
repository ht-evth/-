#include "Error.h"
#include <iostream>


#define MAX_AMOUNT_ERRORS 30
#define MAX_LEN_MSG 100
static char err[MAX_AMOUNT_ERRORS][MAX_LEN_MSG] = {	"Ошибок нет",
												"Отсутствует входной файл",
												"Слишком большой размер исходного модуля",
												"Многострочный комментарий не закрыт",
												"целая константа слишком длинная",
												"идентификатор слишком длинный",
												"cимвольная константа, отсутствует апостроф",
												"Знак неравно !=",
												"неизвестный символ ",
												"ожидался терминал \"int\" при объявлении/описании функции main.",
												"ожидался терминал \"main\" при объявлении/описании функции main.",
												"main уже определена! Повторное определение функции main невозможно!",
												"ожидался символ \"(\".",
												"ожидался символ \")\".",
												"ожидалось объявление переменной или определение/объявление функции.",
												"ожидался терминал return.",
												"ожидался символ \";\".",
												"ожидалось \"return\"/пустой оператор/\"do-while\" / сост. оператор {} / вызов функции / присваивание.",
												"ожидался символ \"{\".",
												"ожидался символ \"}\".",
												"ожидался символ \"do\".",
												"ожидался символ \"while\".",
												"ожидался символ \"[\".",
												"ожидался символ \"]\".",
												"ожидалась константа, идентификатор или выражение.",
												"ожидался идентификатор.",
												"ожидался терминал \"float\", \"double\" или \"int\".",
												"ожидался символ \"=\".",
												"ожидался любой знак присваивания: \"=\" или \"+=\" и т.д. ...",
												"лишний текст в конце программы..."

};


int ErrorPrinter::amount_errors = 0; // инициализация счетчика ошибок


// функция печати ошибок
void ErrorPrinter::print(int num_of_err, char* symbol, int num_of_line)
{
	// если печатаем ошибку - печать текста ошибки, неверного символа и номер строки
	// и увеличиваем число найденных ошибок
	if (num_of_err != NO_ERRORS)
	{
		std::cout << "Ошибка: " << err[num_of_err] << " Неверный символ: " << symbol << "  В строке: " << num_of_line << std::endl;
		ErrorPrinter::amount_errors++;

	}
	// иначе, печатаем сообщение, что нет ошибок
	else
		std::cout << err[num_of_err] << std::endl;
	
}

// перегрузка для случая, когда не нужно выводить символ и номер строки
void ErrorPrinter::print(int num_of_err)
{
		std::cout << "Ошибка: " << err[num_of_err] << std::endl;
		ErrorPrinter::amount_errors++;
}

// вернуть число ошибок
int ErrorPrinter::getAmountOfErrors()
{
	return ErrorPrinter::amount_errors;
}
